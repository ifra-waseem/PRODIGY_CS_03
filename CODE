import re

def assess_password_strength(password):
    # Initialize score and feedback
    score = 0
    feedback = []

    # Check length
    if len(password) >= 8:
        score += 1
    else:
        feedback.append("Password should be at least 8 characters long.")

    # Check for lowercase letters
    if re.search("[a-z]", password):
        score += 1
    else:
        feedback.append("Password should include at least one lowercase letter.")

    # Check for uppercase letters
    if re.search("[A-Z]", password):
        score += 1
    else:
        feedback.append("Password should include at least one uppercase letter.")

    # Check for numbers
    if re.search("[0-9]", password):
        score += 1
    else:
        feedback.append("Password should include at least one number.")

    # Check for special characters
    if re.search("[!@#$%^&*(),.?\":{}|<>]", password):
        score += 1
    else:
        feedback.append("Password should include at least one special character.")

    # Check for sequential characters
    if re.search(r'(.)\1\1', password):
        feedback.append("Password should not contain sequences of three or more repeated characters.")

    # Check for sequential numbers/letters
    if re.search(r'(012|123|234|345|456|567|678|789|890|abc|bcd|cde|def|efg|fgh|ghi|hij|ijk|jkl|klm|lmn|mno|nop|opq|pqr|qrs|rst|stu|tuv|uvw|vwx|wxy|xyz)', password, re.IGNORECASE):
        feedback.append("Password should not contain sequences of three or more sequential characters.")

    # Check for dictionary words (basic check)
    dictionary_words = ["password", "123456", "12345678", "qwerty", "abc123"]
    if any(word in password.lower() for word in dictionary_words):
        feedback.append("Password should not contain common dictionary words or patterns.")

    # Determine strength based on score
    if score == 5:
        strength = "Very Strong"
    elif score == 4:
        strength = "Strong"
    elif score == 3:
        strength = "Moderate"
    elif score == 2:
        strength = "Weak"
    else:
        strength = "Very Weak"

    # Return the strength and feedback
    return strength, feedback

# Example usage
password = "P@ssw0rd123"
strength, feedback = assess_password_strength(password)
print(f"Password Strength: {strength}")
for msg in feedback:
    print(f"- {msg}")
